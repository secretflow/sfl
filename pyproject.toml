[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "sfl"
description = "Secretflow Federated Learning"
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "SecretFlow Team", email = "secretflow-contact@service.alipay.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.10,<3.12"
dynamic = ["version"]

dependencies = [
    "polars",
    "numpy",
    "pandas==1.5.3",
    "scikit-learn==1.5.2",
    "jax[cpu]>=0.4.16,<=0.4.26",
    "jaxlib>=0.4.16,<=0.4.26",
    "networkx==2.8.8",
    "onnx==1.17.0",
    "ray==2.42.0",
    "secretflow-rayfed==0.2.1a2",
    # For security reason.
    "certifi>=2024.7.4",
    "sparse>=0.14.0",
    "tensorflow-macos>=2.12,<2.13; platform_system == 'Darwin'",
    "tensorflow>=2.12,<2.13; platform_system != 'Darwin'",
    "tf2onnx>=1.13.0",
    "tqdm",
    "validator.py==1.3.0",
    "xgboost==1.7.5",
    "wheel>=0.38.1",
    "torch==2.7.0",
    "torchmetrics==1.6.1",
    "torchvision==0.22.0",
    "torchaudio==2.7.0",
    "interconnection==0.2.0.dev0",
    "h5py!=3.11.0; platform_machine == 'aarch64'",
    "dp-accounting==0.4.4",
    "RestrictedPython==8.0",
    "multiprocess==0.70.18",
    "secretflow-lite==1.13.0b0",
    "spu>=0.9.4.dev20250618",
    "matplotlib>=3.10.3",
    "polars==0.19.3",
]

[project.optional-dependencies]
dev = [
    "uv",
    "pytest",
    "pytest-testmon",
    "pytest-cov",
    "pytest-xdist",
    "pytest-custom_exit_code",
    "psutil",
    # added for FreqFed
    "hdbscan",
    "matplotlib",
    "tabulate",
]

[[tool.uv.index]]
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
default = true

[project.urls]
Homepage = "https://github.com/secretflow/sfl"
Repository = "https://github.com/secretflow/sfl"

# When executing bazel build, python dependency libraries need to be used, 
# so it cannot be executed in an isolated environment
[tool.build]
args = ["--no-isolation"]

[tool.pdm.version]
source = "call"
getter = "pdm_build:get_version"

[tool.pdm.build]
includes = [
    "sfl/**/*.py",
    "sfl/component/translation.json",
    # Temporary compatibility history
    "secretflow_fl/**/*.py",
]

[tool.pdm.scripts]
bazel_clean = { call = "pdm_build:bazel_clean" }
bazel_build = { call = "pdm_build:bazel_build" }

[tool.pdm.options]
build = ["--no-isolation", "--no-sdist"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''.*_pb2.py'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
ignore_missing_imports = true
# no_strict_optional = true
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203", # whitespace before ':'
    "W503", # line break before binary operator
    "E402", # module level import not at top of file
    "E501", # line too long
    "F401", # imported but unused
    "F841", # local variable assigned but never used
    "F541", # f-string is missing placeholders
    "E711", # comparison to None should be 'if cond is None:'
    "E266", # too many leading '#' for block comment
    "E722", # do not use bare 'except'
    "E902", # FileNotFoundError
]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".venv",
    "venv",
    "build",
    "dist",
]

[tool.pydocstyle]
convention = "numpy"
add-ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D200", # One-line docstring should fit on one line
    "D202", # No blank lines allowed after function docstring
    "D205", # 1 blank line required between summary line and description
    "D301", # Use r""" if any backslashes in a docstring
    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "D403", # First word of the first line should be properly capitalized
    "D406", # Section name should end with a newline
    "D407", # Missing dashed underline after section
    "D409", # Section underline should match the length of its name
    "D410", # Missing blank line after section
    "D411", # Missing blank line before section
    "D412", # No blank lines allowed between a section header and its content
]

[tool.uv.pip]
index-url = "https://pypi.tuna.tsinghua.edu.cn/simple"
